#!/bin/bash
set -e

function docker_tag_exists() {
    EXISTS=$(curl -s -i https://registry.hub.docker.com/v2/repositories/$1/tags/$2/ | grep last_updated)
    return $?
}

export ARCH=${ARCH:-"amd64"}
BASE=images

source $(dirname $0)/version
cd $(dirname $0)/..

mkdir -p dist
echo > dist/images

for i in $BASE/[1-9]*; do
    name="os-$(echo ${i} | cut -f2 -d-)"

    version="${VERSION}"
    if [ "${name}" == "os-docker" ]; then
	    IFS='-' read -ra dirname <<< "$i"
        IFS='_' read -ra ver <<< "${dirname[2]}"
	    version=${ver[0]}

        #TODO: eventually this will go away, and we can use ARCH
        LOCALARCH="${ver[1]}"
        if [ "${LOCALARCH}" != "" ]; then
            SUFFIX="_${LOCALARCH}"
        else
            LOCALARCH="amd64"
            SUFFIX=""
        fi
    else
        LOCALARCH="$ARCH"
        SUFFIX=""
    fi

    tag="${OS_REPO}/${name}:${version}${SUFFIX}"

    if docker_tag_exists "${OS_REPO}/${name}" "${version}${SUFFIX}"; then
        echo "${tag} EXISTS on Docker Hub, skipping"
        continue
    fi

    if [ $(docker images -q ${tag}) ]; then
        echo "== ${tag} EXISTS locally, needs pushing"
    else
        echo Building ${tag} from ${i}
        if [ -e ${i}/prebuild.sh ]; then
            ${i}/prebuild.sh "${version}" "${LOCALARCH}"
        fi

        if dapper -d --build -f ${i}/Dockerfile -- -t rancher/${name} ${i}; then
            docker tag rancher/${name} ${tag}
        elif [ "$?" != "42" ]; then
            exit 1
        else
            echo "Skipping ${tag}"
            continue
        fi
    fi
    echo ${tag} >> dist/images
done
